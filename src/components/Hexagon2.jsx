/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/hexagon.glb -o src/components/Hexagon.jsx -r public
*/

import { useGLTF } from "@react-three/drei";
import React from "react";
import { RigidBody } from "@react-three/rapier";

export function Hexagon({ color, hit,...props }) {
  const { nodes, materials } = useGLTF("/models/hexagon.glb", "draco/gltf/");


  if (hit) {
    return null;
  }

  return (
    <RigidBody
      {...props}
      type={"fixed"}
      name="hexagon"
      colliders="hull"
      onCollisionEnter={(e) => {
        if (e.other.rigidBodyObject.name === "player") {
          onHit();
        }
      }}
    >
      <group {...props}>
        <mesh geometry={nodes.Hexagon.geometry} material={materials.hexagon}>
          <meshStandardMaterial
            {...materials.hexagon}
            color={color}
            transparent
          />
        </mesh>
      </group>
    </RigidBody>
  );
}

useGLTF.preload("/models/hexagon.glb", "draco/gltf/");
